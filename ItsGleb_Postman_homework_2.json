{
	"info": {
		"_postman_id": "f821276e-430d-4cb6-9edc-1c242ada854f",
		"name": "ItsGleb_Postman_homework_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "First_request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body string is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "User_info_3_request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp_JSON = pm.response.json(); //парсим ответ с сервера в переменную\r",
							"    resp_name = resp_JSON.name;\r",
							"    resp_age = resp_JSON.age;\r",
							"    resp_salary = resp_JSON.salary;\r",
							"    req_JSON = request.data; //парсим данные запроса на сервер в переменную\r",
							"    req_name = req_JSON.name;\r",
							"    req_age = req_JSON.age;\r",
							"    req_salary = parseInt(req_JSON.salary); //переводим тип string из запроса в тип integer\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(resp_name).to.eql(\"Gleb\");\r",
							"}); \r",
							"pm.test(\"Your test age\", function(){\r",
							"    pm.expect(resp_age).to.eql('30');\r",
							"});\r",
							"pm.test(\"Your test salary\", function(){\r",
							"    pm.expect(resp_salary).to.eql(600);\r",
							"});\r",
							"pm.test(\"Your test name from request\", function () {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"}); \r",
							"pm.test(\"Your test age from request\", function(){\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"pm.test(\"Your test salary from request\", function(){\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"});\r",
							"console.log(resp_JSON.family);\r",
							"pm.test(\"U_salary_1_5_year = salary*4\", function(){\r",
							"    pm.expect(resp_JSON.family.u_salary_1_5_year).to.eql(req_salary*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Gleb",
							"type": "text"
						},
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "600",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var response_JSON = pm.response.json(); //парсим ответ с сервера в переменную\r",
							"    response_name = response_JSON.name;\r",
							"    response_age = response_JSON.age;\r",
							"    response_salary = response_JSON.salary;\r",
							"    response_family = response_JSON.family;\r",
							"    request_JSON = pm.request.url.query.toObject(); // парсим запрос на сервер в переменную\r",
							"    request_name = request_JSON.name;\r",
							"    request_age = request_JSON.age;\r",
							"    request_salary = parseInt(request_JSON.salary); //переводим тип string из запроса в тип integer\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(response_name).to.eql(request_name);\r",
							"}); \r",
							"pm.test(\"Your test age\", function (){\r",
							"    pm.expect(response_age).to.eql(request_age);\r",
							"});\r",
							"pm.test(\"Your test salary\", function () {\r",
							"    pm.expect(response_salary).to.eql(request_salary);\r",
							"});\r",
							"console.log(response_family);\r",
							"pm.test(\"Has dog got name?\", function () {\r",
							"    pm.expect(response_family.pets.dog).to.have.property(\"name\");\r",
							"}); \r",
							"pm.test(\"Has dog got age?\", function () {\r",
							"    pm.expect(response_family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"pm.test(\"What is dog name?\", function () {\r",
							"    pm.expect(response_family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"pm.test(\"How old this dog?\", function () {\r",
							"    pm.expect(response_family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Gleb&age=30&salary=600",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Gleb"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "600"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function (){\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var response_JSON = pm.response.json(); //парсим ответ с сервера в переменную\r",
							"    response_name = response_JSON.name;\r",
							"    response_age = response_JSON.age;\r",
							"    response_salary = response_JSON.salary;\r",
							"    request_JSON = pm.request.url.query.toObject(); // парсим запрос на сервер в переменную\r",
							"    request_name = request_JSON.name;\r",
							"    request_age = parseInt(request_JSON.age);\r",
							"    request_salary = parseInt(request_JSON.salary); \r",
							"    \r",
							"pm.test(\"Your test name\", function(){\r",
							"    pm.expect(response_name).to.eql(request_name);\r",
							"});\r",
							"pm.test(\"Your test age\", function(){\r",
							"    pm.expect(response_age).to.eql(request_age);\r",
							"});\r",
							"\r",
							"   console.log(\"Request salary =\", request_salary);\r",
							"   console.log(\"Response salary =\", response_salary);\r",
							"   console.log(\"Response salary[0] =\", response_salary[0]);\r",
							"   console.log(\"Response salary[1] =\", response_salary[1]);\r",
							"   console.log(\"Response salary[2] =\", response_salary[2]);\r",
							"\r",
							"pm.test(\"Response salary[0] = Request salary\", function() {\r",
							"    pm.expect(response_salary[0]).to.eql(request_salary);\r",
							"});\r",
							"pm.test(\"Response salary[1] = Request salary*2\", function(){\r",
							"    pm.expect(parseInt(response_salary[1])).to.eql(request_salary*2);\r",
							"});\r",
							"pm.test(\"Response salary[2] = Request salary*3\", function(){\r",
							"    pm.expect(parseInt(response_salary[2])).to.eql(request_salary*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"env_name\",request_name);\r",
							"pm.environment.set(\"env_age\",request_age);\r",
							"pm.environment.set(\"env_salary\",request_salary);\r",
							"//console.log(pm.variables.get(\"env_name\"));\r",
							"//console.log(pm.variables.get(\"env_age\"));\r",
							"//console.log(pm.variables.get(\"env_salary\"));\r",
							"for (var counter = 0;counter < 3; counter = counter +1 ) {\r",
							"    console.log(\"Response salary\",counter,\"=\",response_salary[counter]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Gleb&age=30&salary=600",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Gleb"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "600"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response_JSON = pm.response.json(); //парсим ответ с сервера в переменную\r",
							"\r",
							"    response_salary = response_JSON.salary;\r",
							"    pm.environment.set(\"salary1\",response_salary);\r",
							"console.log(pm.variables.get(\"salary1\")[1]);\r",
							"var a = 1 + (pm.variables.get(\"salary1\")[0]);\r",
							"console.log(a);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Gleb&age=30&salary=600",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Gleb"
						},
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "600"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "User_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function() {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var response_JSON = pm.response.json(); //парсим ответ с сервера в переменную\r",
							"    request_JSON = request.data; //парсим запрос в переменную\r",
							"    request_salary = parseInt(request_JSON.salary);\r",
							"    request_age = parseInt(request_JSON.age);\r",
							"//блок проверки наличия определенных параметров\r",
							"pm.test(\"Has response_JSON got start_qa_salary?\", function(){\r",
							"    pm.expect(response_JSON).to.have.property(\"start_qa_salary\"); \r",
							"});\r",
							"pm.test(\"Has response_JSON got qa_salary_after_1.5_year?\", function(){\r",
							"    pm.expect(response_JSON).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"pm.test(\"Has response_JSON got qa_salary_after_3.5_years?\", function(){\r",
							"    pm.expect(response_JSON).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"pm.test(\"Has response_JSON got qa_salary_after_6_months?\", function(){\r",
							"    pm.expect(response_JSON).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"pm.test(\"Has response_JSON got qa_salary_after_12_months?\", function(){\r",
							"    pm.expect(response_JSON).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"pm.test('Has response_JSON got person?',function(){\r",
							"    pm.expect(response_JSON).to.have.property(\"person\");\r",
							"});\r",
							"//блок проверки salary\r",
							"pm.test(\"start_qa_salary = request_salary?\", function(){\r",
							"    pm.expect(response_JSON.start_qa_salary).to.eql(request_salary);\r",
							"});\r",
							"pm.test(\"qa_salary_after_6_months = request_salary*2\",function(){\r",
							"    pm.expect(response_JSON[\"qa_salary_after_6_months\"]).to.eql(request_salary*2);\r",
							"});\r",
							"pm.test(\"qa_salary_after_12_months = request_salary*2.7\",function(){\r",
							"    pm.expect(response_JSON[\"qa_salary_after_12_months\"]).to.eql(request_salary*2.7);\r",
							"});\r",
							"pm.test(\"qa_salary_after_1.5_year = request_salary*3.3\",function(){\r",
							"    pm.expect(response_JSON[\"qa_salary_after_1.5_year\"]).to.eql(request_salary*3.3);\r",
							"});\r",
							"pm.test(\"qa_salary_after_3.5_years = request_salary*3.8\", function(){\r",
							"    pm.expect(response_JSON[\"qa_salary_after_3.5_years\"]).to.eql(request_salary*3.8);\r",
							"});\r",
							"//Блок проверки параметра person\r",
							"pm.test(\"u_name[1] = request_salary\", function(){\r",
							"    pm.expect(response_JSON.person.u_name[1]).to.eql(request_salary);\r",
							"});\r",
							"pm.test(\"u_age = request_age\", function(){\r",
							"    pm.expect(response_JSON.person.u_age).to.eql(request_age);\r",
							"});\r",
							"pm.test(\"u_salary_5_years = request_salary*4.2\", function(){\r",
							"    pm.expect(response_JSON.person.u_salary_5_years).to.eql(request_salary*4.2);\r",
							"});\r",
							"\r",
							"for (var key in response_JSON.person){\r",
							"    console.log(\"Ключ:\",key,\"Значение\",response_JSON.person[key]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{env_name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{env_age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{env_salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		}
	]
}